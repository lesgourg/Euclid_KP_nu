#-----CLASS v3.2.0 (branch: b'class_nonlinear', hash: b'381750969cf47659341598e793f9954802b89184')-----

#------Experiments to test (separated with commas)-----
data.experiments=['euclid_spectroscopic']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'


# Cosmological parameter list
data.parameters['w0_fld']          = [-1.0,      -1.5, -0.5,        0.086678,  1, 'cosmo']
data.parameters['wa_fld']          = [ 0.0,      -1.0,  1.0,        0.281240,  1, 'cosmo']
data.parameters['Omega_b']         = [0.0491989,     0.005, 1,  0.0034449441402599,  1, 'cosmo']
data.parameters['h']               = [0.6737,        0.1, 1.5,  0.0032288407710488,  1, 'cosmo']
data.parameters['n_s']             = [0.96605,       0.8, 1.2,  0.0192950276636101,  1, 'cosmo']
data.parameters['sigma8']          = [0.81,          0.7, 0.9,  0.0206365121091943,  1, 'cosmo']
data.parameters['N_eff_camb']      = [3.044,         0.,    6,  0.3077575120912134,  1, 'cosmo']
data.parameters['m_nu_camb']       = [0.06,          5.e-3,    1,  0.1477006057903574,  1, 'cosmo']
data.parameters['Omega_m_camb']    = [0.3145714273,  0.005, 1,  0.0171696502466091,  1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC

data.parameters['P_shot0']  = [0,  None, None,   1.2414229947070299, 1, 'nuisance']
data.parameters['P_shot1']  = [0,  None, None,   1.2204507894229653, 1, 'nuisance']
data.parameters['P_shot2']  = [0,  None, None,   1.2752113374867249, 1, 'nuisance']
data.parameters['P_shot3']  = [0,  None, None,   1.3288194978249617, 1, 'nuisance']
data.parameters['lnbsigma8_0']  = [-0.324980,  None, None,   0.0016625147564206795,  1,  'nuisance']
data.parameters['lnbsigma8_1']  = [-0.315229,  None, None,   0.0016358322473526191,  1,  'nuisance']
data.parameters['lnbsigma8_2']  = [-0.310679,  None, None,   0.0016228318899675308,  1,  'nuisance']
data.parameters['lnbsigma8_3']  = [-0.319153,  None, None,   0.0016186057623980890,  1,  'nuisance']

# Fixed parameter list
data.cosmo_arguments['Omega_Lambda'] = 0
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['T_cmb'] = 2.7255
data.cosmo_arguments['reio_parametrization'] = 'reio_none'
data.cosmo_arguments['N_ncdm'] = 1

# Linear matter power spectrum settings
data.cosmo_arguments['P_k_max_1/Mpc'] = 50.
data.cosmo_arguments['k_per_decade_for_pk'] = 50.
data.cosmo_arguments['k_per_decade_for_bao'] = 50.
data.cosmo_arguments['non linear'] = 'none'

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5


#-----Likelihood-euclid_spectroscopic-----
euclid_spectroscopic.data_directory = '/rwthfs/rz/cluster/home/ca030957/sefa/KPNu_HMCode/montepython/data'
euclid_spectroscopic.fiducial_file = 'euclid_pk_fiducial.dat'
euclid_spectroscopic.NonLinError = 'optimistic'
euclid_spectroscopic.use_nuisance = ['P_shot0', 'P_shot1', 'P_shot2', 'P_shot3', 'lnbsigma8_0', 'lnbsigma8_1', 'lnbsigma8_2', 'lnbsigma8_3']
euclid_spectroscopic.zmin = 0.9
euclid_spectroscopic.zmax = 1.8
euclid_spectroscopic.fsky = 0.3636
euclid_spectroscopic.mu_size = 9
euclid_spectroscopic.k_size = 500
euclid_spectroscopic.kmin = 0.001
euclid_spectroscopic.kmax = 0.3
euclid_spectroscopic.dewiggling_k_min_invMpc = 3.527944863890298e-05
euclid_spectroscopic.dewiggling_k_max_invMpc = 50.794593811035156
euclid_spectroscopic.dewiggling_dlnk = 0.013541649917909737
euclid_spectroscopic.savgol_width = 1.358528901113328
euclid_spectroscopic.savgol_order = 3
euclid_spectroscopic.use_tracer = 'clustering'
euclid_spectroscopic.dewiggle = 'savgol_filter'
euclid_spectroscopic.scale_dependent_growth_factor_f = True


#-----------Cosmological-arguments---------
data.cosmo_arguments.update({'Omega_Lambda': 0, 'YHe': 0.2454006, 'T_cmb': 2.7255, 'reio_parametrization': 'reio_none', 'N_ncdm': 1, 'P_k_max_1/Mpc': 51, 'k_per_decade_for_pk': 50.0, 'k_per_decade_for_bao': 50.0, 'non linear': 'none', 'output': ' mPk ', 'z_max_pk': 1.8})


#--------Default-Configuration------
data.path['root']	= '/rwthfs/rz/cluster/home/ca030957/sefa/KPNu_HMCode/montepython'
data.path['MontePython']	= '/rwthfs/rz/cluster/home/ca030957/sefa/KPNu_HMCode/montepython/montepython'
data.path['data']	= '/rwthfs/rz/cluster/home/ca030957/sefa/KPNu_HMCode/montepython/data'
data.path['cosmo']	= '../class'
data.path['clik']	= '../planck/code/plc_3.0/plc-3.01'
