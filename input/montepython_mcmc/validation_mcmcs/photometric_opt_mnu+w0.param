#------Experiments to test (separated with commas)-----
data.experiments=['euclid_photometric_z']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

# Cosmological parameter list
data.parameters['w0_fld']          = [-1.0,        -1.5, -0.5,  0.0013964240036368877,    1, 'cosmo']
data.parameters['wa_fld']          = [ 0.0,        -1.0,  1.0,  0.,    1, 'cosmo']
data.parameters['Omega_b']         = [0.0491989,     0.005, 1,  0.00027718411490340757,    1, 'cosmo']
data.parameters['h']               = [0.6737,        0.1, 1.5,  0.002018965867805299,    1, 'cosmo']
data.parameters['n_s']             = [0.96605,       0.8, 1.2,  0.0008999800439263314,    1, 'cosmo']
data.parameters['sigma8']          = [0.81,          0.7, 0.9,  0.000413779683134616,    1, 'cosmo']
data.parameters['N_eff_camb']      = [3.044,         1.015, 6,  0.,    1, 'cosmo']
data.parameters['m_nu_camb']       = [0.06,          5e-3,  1,  0.007627645867485888,    1, 'cosmo']
data.parameters['Omega_m_camb']    = [0.3145714273,  0.005, 1,  0.00020690202281316278,    1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
data.parameters['bias_1']          = [1.0998,  None, None, 0.0003000716761778854,  1,  'nuisance']
data.parameters['bias_2']          = [1.2202,  None, None, 0.00042532549238839525,  1,  'nuisance']
data.parameters['bias_3']          = [1.2724,  None, None, 0.000483854293123779,  1,  'nuisance']
data.parameters['bias_4']          = [1.3166,  None, None, 0.0005259164261136929,  1,  'nuisance']
data.parameters['bias_5']          = [1.3581,  None, None, 0.0005599753140878356,  1,  'nuisance']
data.parameters['bias_6']          = [1.3998,  None, None, 0.000587395926722404,  1,  'nuisance']
data.parameters['bias_7']          = [1.4446,  None, None, 0.0006131983898307639,  1,  'nuisance']
data.parameters['bias_8']          = [1.4965,  None, None, 0.0006270685086561976,  1,  'nuisance']
data.parameters['bias_9']          = [1.5652,  None, None, 0.0006462257425827282,  1,  'nuisance']
data.parameters['bias_10']         = [1.7430,  None, None, 0.0007050143537066204,  1,  'nuisance']

# limits of 3sigma (according to IST-opt), except a_IA!>0
data.parameters['aIA']             = [1.72,      0,  12.1, 0.012165400147031099,      1, 'nuisance']
data.parameters['etaIA']           = [-0.41,   -7.,  6.17, 0.0074686784017433516,      1, 'nuisance']
data.parameters['betaIA']          = [2.17,   0.63,   5.0,              0.,      1, 'nuisance']

# Fixed parameter list
data.cosmo_arguments['Omega_Lambda'] = 0.0
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['T_cmb'] = 2.7255
data.cosmo_arguments['reio_parametrization'] = 'reio_none'
data.cosmo_arguments['N_ncdm'] = 1

# Non-Linear matter power spectrum settings
data.cosmo_arguments['P_k_max_1/Mpc'] = 50.
data.cosmo_arguments['k_per_decade_for_pk'] = 50.
data.cosmo_arguments['k_per_decade_for_bao'] = 50.
data.cosmo_arguments['non linear']= 'hmcode2020'
data.cosmo_arguments['nonlinear_min_k_max']= 80.

# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
